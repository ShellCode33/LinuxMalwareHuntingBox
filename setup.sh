#!/bin/bash
set -e

cd "$(dirname "$0")"  # Set working directory to script's directory

if ! VBoxManage &> /dev/null; then
    echo "VirtualBox is the only supported provider for now, please install it."
    exit 1
fi

if ! vagrant version &> /dev/null; then
    echo "The Cuckoo guest VM is managed using vagrant, please install it."
    exit 1
fi

if [ ! -d "venv" ]; then
    echo "Creating virtual environment..."
    if ! python2 -m virtualenv venv &> setup.log; then
        echo "Error: please install python2 virtualenv module."
        exit 1
    fi
fi

echo -en "Enter your project's name : "
read -a name

source venv/bin/activate
echo "Installing cuckoo in virtual environment..."
pip install --upgrade cuckoo &>> setup.log

if [ ! -d "cuckoo" ]; then  # if cuckoo config does't exist yet, we create a clean one
    echo "Create initial cuckoo configuration..."
    cuckoo -d --cwd cuckoo init &>> setup.log
    sed -i "s/MyBox/${name}/g" cuckoo/conf/virtualbox.conf
fi

deactivate

sed -i "s/MyBox/${name}/g" Vagrantfile

echo -e "\nThe guest VM will now be started and configured, it might take a long time, be patient..."
sleep 5
vagrant up
vagrant snapshot save Snapshot1

interface=$(ip -br a | grep '192\.168\.42\.1' | awk '{print $1}')
echo -e "\nPatching cuckoo's config to use interface '${interface}'...\n"
sed -i "s/interface =.*/interface = ${interface}/g" cuckoo/conf/virtualbox.conf

echo "Now all you have to do to use cuckoo is to join the virtual environment :"
echo -e "'. venv/bin/activate'\n"

echo "Run the cuckoo daemon, remember to use --cwd to specify cuckoo's working directory (because default is ~/.cuckoo) :"
echo -e "'cuckoo --cwd cuckoo/ &'\n"

echo "And send binaries to analyse :"
echo "'cuckoo --cwd cuckoo/ submit /path/to/binary'"

echo -e "\nRemember to stop the VM once you're done : 'vagrant halt'"
